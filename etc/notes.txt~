== dev ==

* Setup GitHub Pages "gh-pages" branch and "master" branch as subfolders of a parent project folder ("grandmaster")
-> https://gist.github.com/833223

* http://www.jointjs.com/tutorial.html

== twitterboostrap renderer ==

* focus : first form element ([autofocus] || [tabIndex!="-1"]):visible in rendered templated will be focused

* ng-ampere-transition : attribute ng-ampere-hotkey is taken in account for applying hotkeys

* attribute ng-ampere-hotkey : Alt+Shift+N works whereas Shift+Alt+N

'ampere.ui.layout' : url to layout template or null/false/undefined for no layout. if not set default layout will be used
'ampere.ui.view'   : url to default view template. if not set default view will be used

available rootScope services :
$scope.$ = jQuery
$scope.$window = $window;
$scope.$http = $http;
$scope.$timeout = $timeout;
$scope.$log = $log;
$scope.$resource = $resource;
$scope.$cookies = $cookies;

"batteries included"
"AngularJS on stereoids"
"Create single page web apps with state"
"Einfach zauberhaft"
"Wunderbar"
"the Egg Laying Woolmilkpig"


'ampere.ui.type' = 'global' || 'breadcrumb' || 'primary' || 'secondary' || undefined
transition.enabled( value || function)
* option 'ampere.ui.about.url' can now also be a module transition (see multiview example

* option 'ampere.history.html5' added to support html5 history navigation
(automatically set to true if a module is instantated on a BODY element and the browser supports this feature)

* twitterboostrap renderer : automatic html5 drag-to-desktop ability for anchors having the droppable attribute set.

* <a type="file" ng-ampere-transition=""></a> supported
* directive ng-ampere-data :
** attention - do not use in consumption with data- attributes ( they will get lost)
** expected value is an object which will be merged (by reference, not by copy) into the current data object

* transition : if state===target caption/icon/description from state/target will be ignored

* transaction.active( function/boolean) can be used to signal that this transition was the last "active" one
(will be highlighted in the ui layouts according to their state)

* window.ov.ampere.type( obj) : returns the ampere type ('ampere'/'state'/'transition'/'view'/'module') or $.type result if no ampere type
** type filter returns result of window.ov.ampere.type

* flash API

* templates can now be provided as jquery script elements referenced by id

* behaviour changed : window.ampere( name, options) || window.ampere( name) || window.ampere( options) returns a the instance if available
* filter "strip_tags" added
* ng-ampere-transition : attribute "ng-ampere-icon" added to support overwriting default transition icons

* directive "ng-ampere-watch" : can take a function argument or an object. examples
examples:
	ng-ampere-watch="onChanged"
	ng-ampere-watch="{ 'item.name' : updateName}"
	ng-ampere-watch="{ 'item.name, item.familyname' : updateWholeName}"
	ng-ampere-watch="{ 'item.name, item.familyname' : updateWholeName, 'item.email' : updateEmail, 'item.zipcode,*' : othersUpdated}"
	the called function this is the scope
	1st argument always state
	in case of a an property watch (i.e. not '*' !) there are 3 other arguments property, oldValue, newValue
	!attention! modifications should always be done on the scope !!!!!

* inline-help / help-block support for .invalid/:invalid form controls

* entity && entity.projection api examples

* "ampere.ui.angular" interface / Ampere class "Component" example

* directive "ng-ampere-template" example

=== new ===

